[gd_scene load_steps=8 format=2]

[ext_resource path="res://Scenes/Buttons/BackButton.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scenes/Background.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/PageTitle/PageTitle.tscn" type="PackedScene" id=3]
[ext_resource path="res://Scenes/Buttons/Button.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scenes/Pages/ExportGDScript/ExportGDScript.gd" type="Script" id=5]
[ext_resource path="res://normal_font.tres" type="DynamicFont" id=6]
[ext_resource path="res://codefont.tres" type="DynamicFont" id=7]

[node name="ExportGDScript" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Background" parent="." instance=ExtResource( 2 )]

[node name="VBoxContainer" type="VBoxContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
custom_constants/separation = 10
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PageTitle" parent="VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
margin_right = 1024.0
margin_bottom = 50.0
text = "Export Highscoremanager.gd"

[node name="Control" type="Control" parent="VBoxContainer"]
margin_top = 60.0
margin_right = 1024.0
margin_bottom = 600.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="VBoxContainer/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 20.0
margin_top = 20.0
margin_right = -20.0
margin_bottom = -20.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="RichTextLabel" parent="VBoxContainer/Control/VBoxContainer"]
margin_right = 984.0
margin_bottom = 464.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/mono_font = ExtResource( 7 )
custom_fonts/normal_font = ExtResource( 6 )
bbcode_enabled = true
bbcode_text = "Klick the button bellow to export your own little script which can communicate with the kitchen-games.de server and/or hadle your local highscore saving and loading.
Here is how to do it:

[b][u]Highscoremanager[/u][/b]

This is a simple script for saving and loading highscore data.
Feel free to modify the file as you need or like it. I#m just a hobbyist so please dont judje my code too much. If you've got some improvements for the Highscoremanager which you want to share with me, please contact me via my e-mail address: info@kitchen-games.de

[b][u]Getting Started[/u][/b]

First things first. Every player will get their own unique username. This name is randomly generated using a set of nouns an adjectives. Here are some example names:
  
 - golden and cuddly woman
 - pretty and sassy salad
 - fancy and solid cousin
 - flashy and yellow wife
 
These examples where generated by the default set of words, which can be overwritten in the file

[i]Examples[/i]]
Here is an example for saving the highscore
[color=#aaffaa][code]
    func lose():
	    # normal things to do when the game is lost
		if state == STATES.LOST:
			return
		state = STATES.LOST
		
		# loading the current highscore and Saving the new score if its better highscore
		if HighscoreManager.load_local_highscore() < score:
			HighscoreManager.save_local_highscore(score)
		# Submitting the highscore to the server
		# Notice that the local and server highscore can get out of sync when the player broke their record while playing offline. 
		# Thats why you want submit the highscore to the server anyway. It'll only be saved when its a new record anyway
		HighscoreManager.submit_highscore(score)
[/code][/color]
	
Next an example for loading the highscore from the server
	
[color=#aaffaa][code]
    func _ready():
	    # first we have to connect to the tome_out and data_recieved signal
		HighscoreManager.connect(\"data_recieved\", self, \"on_data_recieved\")
		HighscoreManager.connect(\"timeout\", self, \"on_data_not_recieved\")
		# then we load the scores
		HighscoreManager.get_highscore_for_places(0, 100)
	
	func on_data_not_recieved(_data_type):
		$RichTextLabel.text = \"connection failed!\"
	
	# data are the actual leaderboard data in array format
	# data_type is the type of data we're expecting. In this case its WAIT_FOR.HIGHSCORE_FOR_PLACES since we calles the method get_highscore_for_places before
	func on_data_recieved(data, data_type):
		match data_type:
			HighscoreManager.WAIT_FOR.HIGHSCORE_FOR_PLACE: pass
			HighscoreManager.WAIT_FOR.HIGHSCORE_FOR_PLACES: 
				pass # display data here
			HighscoreManager.WAIT_FOR.HIGHSCORE_FOR_PLAYER: pass
[/code][/color]"
text = "Klick the button bellow to export your own little script which can communicate with the kitchen-games.de server and/or hadle your local highscore saving and loading.
Here is how to do it:

Highscoremanager

This is a simple script for saving and loading highscore data.
Feel free to modify the file as you need or like it. I#m just a hobbyist so please dont judje my code too much. If you've got some improvements for the Highscoremanager which you want to share with me, please contact me via my e-mail address: info@kitchen-games.de

Getting Started

First things first. Every player will get their own unique username. This name is randomly generated using a set of nouns an adjectives. Here are some example names:
  
 - golden and cuddly woman
 - pretty and sassy salad
 - fancy and solid cousin
 - flashy and yellow wife
 
These examples where generated by the default set of words, which can be overwritten in the file

Examples]
Here is an example for saving the highscore

    func lose():
	    # normal things to do when the game is lost
		if state == STATES.LOST:
			return
		state = STATES.LOST
		
		# loading the current highscore and Saving the new score if its better highscore
		if HighscoreManager.load_local_highscore() < score:
			HighscoreManager.save_local_highscore(score)
		# Submitting the highscore to the server
		# Notice that the local and server highscore can get out of sync when the player broke their record while playing offline. 
		# Thats why you want submit the highscore to the server anyway. It'll only be saved when its a new record anyway
		HighscoreManager.submit_highscore(score)

	
Next an example for loading the highscore from the server
	

    func _ready():
	    # first we have to connect to the tome_out and data_recieved signal
		HighscoreManager.connect(\"data_recieved\", self, \"on_data_recieved\")
		HighscoreManager.connect(\"timeout\", self, \"on_data_not_recieved\")
		# then we load the scores
		HighscoreManager.get_highscore_for_places(0, 100)
	
	func on_data_not_recieved(_data_type):
		$RichTextLabel.text = \"connection failed!\"
	
	# data are the actual leaderboard data in array format
	# data_type is the type of data we're expecting. In this case its WAIT_FOR.HIGHSCORE_FOR_PLACES since we calles the method get_highscore_for_places before
	func on_data_recieved(data, data_type):
		match data_type:
			HighscoreManager.WAIT_FOR.HIGHSCORE_FOR_PLACE: pass
			HighscoreManager.WAIT_FOR.HIGHSCORE_FOR_PLACES: 
				pass # display data here
			HighscoreManager.WAIT_FOR.HIGHSCORE_FOR_PLAYER: pass
"

[node name="CenterContainer" type="CenterContainer" parent="VBoxContainer/Control/VBoxContainer"]
margin_top = 468.0
margin_right = 984.0
margin_bottom = 500.0

[node name="ExportButton" parent="VBoxContainer/Control/VBoxContainer/CenterContainer" instance=ExtResource( 4 )]
margin_left = 360.0
margin_right = 623.0
margin_bottom = 32.0
text = "Export Highscoremanager for "

[node name="IconButton" parent="." instance=ExtResource( 1 )]
anchor_left = 0.0231853
anchor_top = 0.908546
anchor_right = 0.16381
anchor_bottom = 0.961879
margin_right = 0.0
margin_bottom = 0.0

[node name="FileDialog" type="FileDialog" parent="."]
visible = true
margin_right = 735.0
margin_bottom = 431.0
window_title = "Save your Highscoremanager"
access = 2
current_dir = "/Users/Merten/Desktop"
current_file = "Highscoremanager.gd"
current_path = "/Users/Merten/Desktop/Highscoremanager.gd"

[connection signal="pressed" from="VBoxContainer/Control/VBoxContainer/CenterContainer/ExportButton" to="." method="_on_ExportButton_pressed"]
